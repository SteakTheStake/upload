app Summit {
  wasp: {
    version: "^0.11.4"
  },
  title: "Summit",
  client: {
    rootComponent: import { Layout } from "@client/Layout.jsx"
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  }
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@client/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@client/pages/auth/Signup.jsx"
}

entity User {=psl
    id            Int            @id @default(autoincrement())
    username      String         @unique
    password      String
    subscriptions Subscription[]
    cart          Item[]
psl=}

entity Item {=psl
    id          Int    @id @default(autoincrement())
    title       String
    description String
    price       Float
    users       User   @relation(fields: [userId], references: [id])
    userId      Int
psl=}

entity Subscription {=psl
    id     Int    @id @default(autoincrement())
    name   String
    price  Float
    users  User   @relation(fields: [userId], references: [id])
    userId Int
psl=}

action createItem {
  fn: import { createItem } from "@server/actions.js",
  entities: [Item]
}

action createSubscription {
  fn: import { createSubscription } from "@server/actions.js",
  entities: [Subscription]
}

action addToCart {
  fn: import { addToCart } from "@server/actions.js",
  entities: [User, Item]
}

action subscribe {
  fn: import { subscribe } from "@server/actions.js",
  entities: [User, Subscription]
}

query getItem {
  fn: import { getItem } from "@server/queries.js",
  entities: [Item]
}

query getSubscription {
  fn: import { getSubscription } from "@server/queries.js",
  entities: [Subscription]
}

query getUserCart {
  fn: import { getUserCart } from "@server/queries.js",
  entities: [User, Item]
}

query getUserSubscriptions {
  fn: import { getUserSubscriptions } from "@server/queries.js",
  entities: [User, Subscription]
}

route HomePageRoute { path: "/", to: HomePage }
page HomePage {
  component: import { HomePage } from "@client/pages/Home.jsx",
  authRequired: false
}

route CatalogRoute { path: "/catalog", to: CatalogPage }
page CatalogPage {
  component: import { Catalog } from "@client/pages/Catalog.jsx",
  authRequired: true
}

route SubscriptionRoute { path: "/subscription", to: SubscriptionPage }
page SubscriptionPage {
  component: import { Subscription } from "@client/pages/Subscription.jsx",
  authRequired: true
}

route CartRoute { path: "/cart", to: CartPage }
page CartPage {
  component: import { Cart } from "@client/pages/Cart.jsx",
  authRequired: true
}